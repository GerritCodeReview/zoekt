{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c8fb6a2b_eda8efee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-08-12T07:56:10Z",
      "side": 1,
      "message": "actually, wait a minute. \n\nThis may create a fallback on a production system too, which seems risky.\n\nCould you make the fallback only occur for tests?",
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a4992eb_3f7d3403",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060017
      },
      "writtenOn": "2021-08-12T09:52:38Z",
      "side": 1,
      "message": "For running locally in my dev environment I also find it useful to not have sandbox mode since I haven\u0027t compiled it to support it.\n\nBut you are right, if we ship the wrong ctags in production this can be an issue. I\u0027ve come across a few classic buffer overflows in universal-ctags, so this is an important feature.\n\nI\u0027ll special case tests, but I wonder if there is a nice way for us to \"detect\" production environments. Or maybe we should just make it that devenvs have sandbox mode enabled on linux?",
      "parentUuid": "c8fb6a2b_eda8efee",
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "774f293b_33c62a64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060017
      },
      "writtenOn": "2021-08-12T09:57:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a4992eb_3f7d3403",
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58748dfa_44ef214d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-08-12T09:58:50Z",
      "side": 1,
      "message": "\u003e devenvs have sandbox mode enabled on linux?\n\nthere is no downside to having sandbox compiled in on Linux. I wonder why it\u0027s not included in default build actions on Linux.",
      "parentUuid": "0a4992eb_3f7d3403",
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b52042de_dce30c53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060017
      },
      "writtenOn": "2021-08-12T10:18:12Z",
      "side": 1,
      "message": "I don\u0027t know. I just checked on a few distributions I am familiar with. Alpine and nixos do not include it. Ubuntu and debian include it.\n\nAnother fun thing is only ubuntu calls the binary universal-ctags. Everything else just installs it as ctags.\n\nPersonally I develop on nixos. Given it works on the more mainstream distribution of ubuntu I\u0027m happy to abandon this and just target that. Then workaround it myself to ensure i have sandboxing on. What do you think?",
      "parentUuid": "58748dfa_44ef214d",
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e39b1d7_514e5888",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-08-12T10:43:21Z",
      "side": 1,
      "message": "abandoning it is certainly simpler, but I feel we should capture this knowledge somewhere. Maybe update doc/ctags.md?",
      "parentUuid": "b52042de_dce30c53",
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dda0a944_1fae251d",
        "filename": "ctags/json.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-08-12T07:53:41Z",
      "side": 1,
      "message": "note: I\u0027ve been inconsistent with capitalization (CTags vs Ctags).  It might be a good idea to regularize this (build/ctags.go has a runCTagsChunked function)",
      "range": {
        "startLine": 244,
        "startChar": 14,
        "endLine": 244,
        "endChar": 19
      },
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "779aabbc_984153b3",
        "filename": "ctags/json.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1060017
      },
      "writtenOn": "2021-08-12T09:52:38Z",
      "side": 1,
      "message": "universal-ctags repo refers to itself as \"Universal Ctags\". So I assume if I make it consistent we should go with a lower case t? WDYT?\n\nI can follow-up with that.",
      "parentUuid": "dda0a944_1fae251d",
      "range": {
        "startLine": 244,
        "startChar": 14,
        "endLine": 244,
        "endChar": 19
      },
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40aa4871_fc4dfb47",
        "filename": "ctags/json.go",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1024147
      },
      "writtenOn": "2021-08-12T09:58:50Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "779aabbc_984153b3",
      "range": {
        "startLine": 244,
        "startChar": 14,
        "endLine": 244,
        "endChar": 19
      },
      "revId": "b8f334d3c75ccc11e5d69a085baca037c2e80f7a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}